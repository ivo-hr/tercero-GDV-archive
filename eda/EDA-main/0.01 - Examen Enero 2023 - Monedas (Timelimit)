#include <iostream>
#include <fstream>
#include <vector>
#include <climits>

using namespace std;

const int NUM_MONEDAS = 8;
const int valores[NUM_MONEDAS] = { 1,2,5,10,20,50,100,200 };

bool esValido(vector<int>& sol, int precio, int k, int& dinero)
{
    dinero += sol[k]; 

    return dinero <= precio;
}

void resolver(vector<int>& sol, vector<int>& monedas, int precio, int k, int& monedasUsadas, int& monedasMax, int& dinero)
{
    for (int i = 0; i < NUM_MONEDAS; i++)
    {
        if (monedas[i] > 0)
        {
            sol[k] = valores[i];

            if (esValido(sol, precio, k, dinero))
            {
                monedas[i]--;
                monedasUsadas++;

                if (dinero == precio)
                {
                    if (monedasMax < monedasUsadas)
                        monedasMax = monedasUsadas;
                }

                else
                    resolver(sol, monedas, precio, k + 1, monedasUsadas, monedasMax, dinero);

                monedas[i]++;
                monedasUsadas--;
            }

            dinero -= sol[k]; 

            sol[k] = 0;
        }
    }
}


// Resuelve un caso de prueba, leyendo de la entrada la
// configuración, y escribiendo la respuesta
void resuelveCaso()
{
    int precio;
    vector<int> monedas(NUM_MONEDAS);
    cin >> precio;

    for (int i = 0; i < NUM_MONEDAS; ++i)
        cin >> monedas[i];

    vector<int> sol(precio);

    int monedasUsadas = 0;
    int monedasMax = 0;
    int dinero = 0; 

    resolver(sol, monedas, precio, 0, monedasUsadas, monedasMax, dinero);

    if (monedasMax > 0)
        cout << monedasMax << "\n";
    else
        cout << "IMPOSIBLE\n";
}

//#define DOMJUDGE
int main() {
    // Para la entrada por fichero.
    // Comentar para acepta el reto
#ifndef DOMJUDGE
    std::ifstream in("datos.txt");
    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
#endif

    int numCasos;
    std::cin >> numCasos;

    for (int i = 0; i < numCasos; ++i)
        resuelveCaso();

    // Para restablecer entrada. Comentar para acepta el reto
#ifndef DOMJUDGE // para dejar todo como estaba al principio
    std::cin.rdbuf(cinbuf);
    //system("PAUSE");
#endif

    return 0;
}
