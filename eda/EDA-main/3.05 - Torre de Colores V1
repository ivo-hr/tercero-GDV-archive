//Eva Sanchez Mu√±oz
//VJ60 

#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>
#include <vector>

using namespace std;

string colores(int i)
{
    string color = " "; 

    if (i == 0)
        color = "azul";
    else if (i == 1)
        color = "rojo";
    else
        color = "verde"; 

    return color; 
}

void torre(vector<string>& sol, int n, int k, vector<bool>& usadas)
{
    for (int color = 0; color < 3; color++)
    {
        sol[k] = colores(color);

        if (!usadas[k])
        {
            if (k == n - 1)
            {
                for (int j = 0; j < sol.size(); j++)
                    cout << sol[j] << " ";

                cout << "\n";
            }

            else
            {
                usadas[k] = true;
                torre(sol, n, k + 1, usadas);
                usadas[k] = false;
            }
        }
    }
}

bool resuelveCaso() 
{
	int numElem;
	cin >> numElem;

	if (numElem == 0)
		return false;

	vector<string> sol (numElem);
    vector<bool> usados (numElem);

    torre(sol, numElem, 0, usados);

    cout << "\n";

	return true;
}

int main()
{
    // Para la entrada por fichero.
    // Comentar para acepta el reto
#ifndef DOMJUDGE
    std::ifstream in("datos.txt");
    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
#endif 


        while(resuelveCaso()); 


    // Para restablecer entrada. Comentar para acepta el reto
#ifndef DOMJUDGE // para dejar todo como estaba al principio
    std::cin.rdbuf(cinbuf);
    system("PAUSE");
#endif

    return 0;
}
