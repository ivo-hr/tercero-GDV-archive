//Eva Sanchez Mu√±oz
//VJ60 

#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>
#include <vector>

using namespace std;

string colores(int i)
{
    string color = " "; 

    if (i == 0)
        color = "azul";
    else if (i == 1)
        color = "rojo";
    else
        color = "verde"; 

    return color; 
}

bool esValida(vector<string>& sol, int k)
{
    if (k != 0)
    {
        if (sol[k] == "verde" && sol[k - 1] == "verde")
            return false;
    }

    return true; 
}

void escribir(vector<string>sol)
{
    for (int j = 0; j < sol.size(); j++)
        cout << sol[j] << " ";

    cout << "\n";
}

void torre(vector<string>& sol, int n, int k, vector<bool>& usadas)
{
    if (k < n)
    {
        for (int color = 0; color < 3; color++)
        {
            sol[k] = colores(color);

            if (!usadas[k] && esValida(sol, k))
            {
                if (k == n - 1)
                    escribir(sol); 

                else
                {
                    usadas[k] = true;
                    torre(sol, n, k + 1, usadas);
                    usadas[k] = false;
                }
            }
        }
    }

    else
        escribir(sol); 
}

bool resuelveCaso()
{
    int numElem;
    cin >> numElem;

    if (numElem == 0)
        return false;

    vector<string> sol(numElem);
    vector<bool> usados(numElem);

    sol[0] = "rojo"; 
    usados[0] = true; 

    torre(sol, numElem, 1, usados);

    cout << "\n";

    return true;
}

int main()
{
    // Para la entrada por fichero.
    // Comentar para acepta el reto
#ifndef DOMJUDGE
    std::ifstream in("datos.txt");
    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
#endif 


        while(resuelveCaso()); 


    // Para restablecer entrada. Comentar para acepta el reto
#ifndef DOMJUDGE // para dejar todo como estaba al principio
    std::cin.rdbuf(cinbuf);
    system("PAUSE");
#endif

    return 0;
}
