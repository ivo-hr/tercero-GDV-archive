//// Sebastian Sanchez Castelli-Gair
//// VJ57
//
//
//#include <iostream>
//#include <iomanip>
//#include <fstream>
//#include "bintree_eda.h"
//
//using namespace std;
//
//// función que resuelve el problema
////TipoSolucion resolver(TipoDatos datos) {
////    
////    
////}
//
//// Resuelve un caso de prueba, leyendo de la entrada la
//// configuración, y escribiendo la respuesta
//bool resuelveCaso() {
//    // leer los datos de la entrada
//    char tipo;
//    cin >> tipo;
//
//    if (! std::cin)
//        return false;
//
//    if (tipo == 'N') {
//        bintree<int> b;
//        b = leerArbol(-1);
//        cout << b.menorElem() << '\n';
//    }
//    else if (tipo == 'P') {
//        bintree<string> b; string s = "#";
//        b = leerArbol(s);
//        cout << b.menorElem() << '\n';
//
//    }
//
//    //TipoSolucion sol = resolver(datos);
//    
//    // escribir sol
//    return true;
//    
//}
//
//int main() {
//    // Para la entrada por fichero.
//    // Comentar para acepta el reto
//#ifndef DOMJUDGE
//    std::ifstream in("datos.txt");
//    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
//#endif
//
//    while (resuelveCaso())
//        ;
//
//
//    // Para restablecer entrada. Comentar para acepta el reto
//#ifndef DOMJUDGE // para dejar todo como estaba al principio
//    std::cin.rdbuf(cinbuf);
//    //system("PAUSE");
//#endif
//
//    return 0;
//}
