////Sebastian Sanchez Castelli-Gair
//// VJ57
//
//
//#include <iostream>
//#include <iomanip>
//#include <fstream>
//#include <vector>
//
//using namespace std;
//
//
//// función que resuelve el problema
//int resolver(const vector<int>& v, int ini, int fin) {
//    int n = fin - ini;
//
//    if (n == 1)
//        return v[ini];
//    if (n == 2) {
//        if (v[ini] < v[ini + 1])
//            return v[ini];
//
//        return v[ini + 1];
//    }
//
//    int mit = (ini + fin) / 2;
//
//    if (v[mit] < v[mit + 1])
//        return resolver(v, ini, mit + 1);
//
//    if (v[mit] > v[mit + 1])
//        return resolver(v, mit + 1, fin);
//}
//
//// Resuelve un caso de prueba, leyendo de la entrada la
//// configuración, y escribiendo la respuesta
//bool resuelveCaso() {
//    // leer los datos de la entrada
//    int i, k;
//    cin >> i;
//
//    if (!std::cin)
//        return false;
//
//    vector<int> v(i);
//    
//    for (int j = 0; j < i; j++)
//    {
//        cin >> k;
//        v[j] = k;
//    }
//
//    int sol = resolver(v, 0, i);
//
//    // escribir sol
//    cout << sol << '\n';
//
//    return true;
//
//}
//
//int main() {
//    // Para la entrada por fichero.
//    // Comentar para acepta el reto
//#ifndef DOMJUDGE
//    std::ifstream in("datos.txt");
//    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
//#endif 
//
//
//    while (resuelveCaso())
//        ;
//
//
//    // Para restablecer entrada. Comentar para acepta el reto
//#ifndef DOMJUDGE // para dejar todo como estaba al principio
//    std::cin.rdbuf(cinbuf);
//    system("PAUSE");
//#endif
//
//    return 0;
//}
