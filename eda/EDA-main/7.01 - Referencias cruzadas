//Eva Sanchez Mu√±oz
//VJ60 

#include <unordered_map>
#include <iostream>
#include <iomanip>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <map>

using namespace std;

void resolver(map<string, vector<int>>& palabraLineas, const string& linea, const int& l) 
{
	string palabra;
	stringstream ss(linea);

	while (ss >> palabra) 
	{
		if (palabra.size() > 2) 
		{
			int tam = palabra.size(); 

			for (int i = 0; i < tam; i++)
				palabra[i] = tolower(palabra[i]);

			if (palabraLineas[palabra].empty() || palabraLineas[palabra].back() != l)
				palabraLineas[palabra].push_back(l);
		}
	}
}

bool resuelveCaso() {

	int n;
	cin >> n;

	if (n == 0)
		return false;

	string linea;
	map<string, vector<int>> palabraLineas;

	for (int i = 0; i <= n; i++) 
	{
		getline(cin, linea);

		resolver(palabraLineas, linea, i);
	}

	for (const auto& a : palabraLineas) 
	{
		cout << a.first << " ";

		for (const int& i : a.second)
			cout << i << " ";

		cout << "\n";
	}

	cout << "---\n";

	return true;

}

int main()
{
    // Para la entrada por fichero.
    // Comentar para acepta el reto
#ifndef DOMJUDGE
    std::ifstream in("datos.txt");
    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
#endif 

    while (resuelveCaso());


    // Para restablecer entrada. Comentar para acepta el reto
#ifndef DOMJUDGE // para dejar todo como estaba al principio
    std::cin.rdbuf(cinbuf);
    system("PAUSE");
#endif

    return 0;
}
