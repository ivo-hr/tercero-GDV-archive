//Eva Sanchez Mu√±oz
//VJ60 

#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>
#include <vector>

using namespace std;

void reinas(vector<bool>& columna, vector<bool>& diagonal, int n, int k, int& sol)
{
    for (int i = 0; i < n; i++)
    {
        if (!columna[i] && !diagonal[i - k + n] && !diagonal[i + 2 * n + k - 1])
        {
            if (k == n - 1)
                sol++; 

            else
            {
                columna[i] = true;
                diagonal[i - k + n] = true;
                diagonal[i + 2 * n + k - 1] = true;

                reinas(columna, diagonal, n, k + 1, sol);

                columna[i] = false;
                diagonal[i - k + n] = false;
                diagonal[i + 2 * n + k - 1] = false;
            }
        }
    }
}

void resuelveCaso()
{
    int n;
    cin >> n;

    vector<bool> columna(n, false);
    vector<bool> diagonal(4 * n - 2, false);

    int sol = 0;

    reinas(columna, diagonal, n, 0, sol);

    cout << sol << '\n';
}

int main()
{
    // Para la entrada por fichero.
    // Comentar para acepta el reto
#ifndef DOMJUDGE
    std::ifstream in("datos.txt");
    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
#endif 

    int n; 
    cin >> n; 

    for (int i = 0; i < n; i++)
        resuelveCaso(); 


    // Para restablecer entrada. Comentar para acepta el reto
#ifndef DOMJUDGE // para dejar todo como estaba al principio
    std::cin.rdbuf(cinbuf);
    system("PAUSE");
#endif

    return 0;
}
