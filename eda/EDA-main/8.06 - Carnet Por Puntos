//
//#include <iostream>
//#include <string>
//#include <vector>
//#include <fstream>
//#include <map>
//#include <stack>
//#include <algorithm>
//
//using namespace std;
//
//using dni = string;
//
//struct conductorPorCambiosRecientes {
//    int diasUltimaOperacion;
//    dni DNI;
//
//    bool operator>(const conductorPorCambiosRecientes& other) {
//        return diasUltimaOperacion > other.diasUltimaOperacion;
//    }
//};
//struct conductor {
//    int puntos;
//    int diasUltimaOperacion;
//};
//class carnet_puntos {
//private:
//    map<dni, conductor> conductores;
//
//    long nOp = 0;
//public:
//
//    void nuevo(dni d) {
//
//        auto i = conductores.find(d);
//
//        if (i == conductores.end()) {
//            conductores.insert({ d, {15, nOp} });
//            nOp++;
//        }
//        else
//            throw domain_error("Conductor duplicado");
//    }
//
//    void quitar(dni d, int puntos) {
//
//        auto i = conductores.find(d);
//
//        if (i != conductores.end()) {
//            
//            if (i->second.puntos != 0) {
//                nOp++;
//                i->second.diasUltimaOperacion = nOp;
//            }
//
//            i->second.puntos -= puntos;
//            if (i->second.puntos < 0)
//                i->second.puntos = 0;
//        }
//        else
//            throw domain_error("Conductor inexistente");
//
//    }
//
//    void recuperar(dni d, int puntos) {
//        auto i = conductores.find(d);
//
//        if (i != conductores.end()) {
//
//            if (i->second.puntos != 15) {
//                i->second.diasUltimaOperacion = nOp;
//                nOp++;
//            }
//
//
//            i->second.puntos += puntos;
//            if (i->second.puntos > 15)
//                i->second.puntos = 15;
//        }
//        else
//            throw domain_error("Conductor inexistente");
//    }
//
//    int consultar(dni d) {
//        auto i = conductores.find(d);
//
//        if (i != conductores.end()) {
//            return i->second.puntos;
//        }
//        
//        throw domain_error("Conductor inexistente");
//    }
//
//    int cuantos_con_puntos(int puntos) {
//
//        if (puntos >= 0 && puntos <= 15) {
//
//            int num = 0;
//
//            for (auto i : conductores)
//                if (i.second.puntos == puntos)
//                    num++;
//
//            return num;
//        }
//
//        throw domain_error("Puntos no validos");
//
//    }
//
//    vector<dni> lista_por_puntos(int puntos) {
//
//        if (puntos >= 0 && puntos <= 15) {
//
//            vector<conductorPorCambiosRecientes> v;
//
//            for (auto i : conductores)
//                if (i.second.puntos == puntos)
//                    v.push_back({ i.second.diasUltimaOperacion, i.first });
//
//            sort(v.begin(), v.end(), greater<>());
//
//            vector<dni> vv;
//            for (auto i : v) {
//                vv.push_back(i.DNI);
//            }
//
//            return vv;
//
//        }
//
//        throw domain_error("Puntos no validos");
//    }
//};
//
//
//bool resuelveCaso() {
//    std::string orden, dni;
//    int punt;
//    std::cin >> orden;
//    if (!std::cin)
//        return false;
//
//    carnet_puntos dgt;
//
//    while (orden != "FIN") {
//        try {
//            if (orden == "nuevo") {
//                cin >> dni;
//                dgt.nuevo(dni);
//            }
//            else if (orden == "quitar") {
//                cin >> dni >> punt;
//                dgt.quitar(dni, punt);
//            }
//            else if (orden == "recuperar") {
//                cin >> dni >> punt;
//                dgt.recuperar(dni, punt);
//            }
//            else if (orden == "consultar") {
//                cin >> dni;
//                punt = dgt.consultar(dni);
//                cout << "Puntos de " << dni << ": " << punt << '\n';
//            }
//            else if (orden == "cuantos_con_puntos") {
//                cin >> punt;
//                int cuantos = dgt.cuantos_con_puntos(punt);
//                cout << "Con " << punt << " puntos hay " << cuantos << '\n';
//            }
//            else if (orden == "lista_por_puntos") {
//                cin >> punt;
//                auto const& lista = dgt.lista_por_puntos(punt);
//                cout << "Tienen " << punt << " puntos:";
//                for (auto const& dni : lista)
//                    cout << ' ' << dni;
//                cout << '\n';
//            }
//            else
//                cout << "OPERACION DESCONOCIDA\n";
//        }
//        catch (std::domain_error e) {
//            std::cout << "ERROR: " << e.what() << '\n';
//        }
//        std::cin >> orden;
//    }
//    std::cout << "---\n";
//    return true;
//}
//
//int main() {
//
//    // ajuste para que cin extraiga directamente de un fichero
//#ifndef DOMJUDGE
//   // _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);
//    std::ifstream in("datos.txt");
//    auto cinbuf = std::cin.rdbuf(in.rdbuf());
//#endif
//
//    while (resuelveCaso());
//
//    // restablecimiento de cin
//#ifndef DOMJUDGE
//    std::cin.rdbuf(cinbuf);
//    //system("pause");
//#endif
//    return 0;
//}
