//Eva Sanchez Mu√±oz
//VJ60 

#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>

#include "deque_eda.h"
#include "list_eda.h"
#include "queue_eda.h"

using namespace std;

list<int> resolver(list<int>& l)
{
    int max = -1; 

    for (auto i = l.begin(); i != l.end();)
    {
        if ((*i) > max)
        {
            max = (*i);
            i++; 
        }

        else
        {
            int aux = (*i); 
            auto j = l.begin(); 

            while (aux > (*j))
                j++; 

            l.insert(j, aux); 

            i = l.erase(i); 
        }
    }

    return l; 
}

void resuelveCaso() 
{
    list<int> l; 

    int n; 
    cin >> n; 

    while (n != 0)
    {
        l.push_back(n); 
        cin >> n; 
    }

    cin >> n;

    while (n != 0)
    {
        l.push_back(n);
        cin >> n;
    }
 
    list<int>aux = resolver(l); 

    for (auto i = aux.begin(); i != aux.end();)
    {
        cout << (*i) << " "; 
        i = aux.erase(i); 
    }

    cout << "\n"; 
}

int main()
{
    // Para la entrada por fichero.
    // Comentar para acepta el reto
#ifndef DOMJUDGE
    std::ifstream in("datos.txt");
    auto cinbuf = std::cin.rdbuf(in.rdbuf()); //save old buf and redirect std::cin to casos.txt
#endif 

    int n; 
    cin >> n; 

    for (int i = 0; i < n; i++)
        resuelveCaso(); 


    // Para restablecer entrada. Comentar para acepta el reto
#ifndef DOMJUDGE // para dejar todo como estaba al principio
    std::cin.rdbuf(cinbuf);
    system("PAUSE");
#endif

    return 0;
}
