vertex_program MyFirstShaderVS glsl
{
    // nombre del archivo del codigo
    source MyFirstShaderVS.glsl
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjectionMatrix worldviewproj_matrix
    }
}

fragment_program MyFirstShaderFS glsl
{
    // nombre del archivo del codigo
    source MyFirstShaderFS.glsl
    default_params // valores para las variable uniform
    {

    }
}

material Practica2GLSL/orangeBomb
{
    technique
    {
        pass
        {
            vertex_program_ref MyFirstShaderVS
            { // params -> default_params

            }
            fragment_program_ref MyFirstShaderFS
            { // params -> default_params

            }
        }
    }
}

vertex_program SpaceSkyVS glsl
{
    // nombre del archivo del codigo
    source SpaceSkyVS.glsl
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjectionMatrix worldviewproj_matrix
    }
}

fragment_program SpaceSkyFS glsl
{
    // nombre del archivo del codigo
    source SpaceSkyFS.glsl
    default_params // valores para las variable uniform
    {
        param_named texturaL int 0 // Primera unidad de textura
        param_named texturaM int 1 // Segunda unidad de textura
        param_named BF float 0.5
        param_named intLuzAmb float 1.0
    }
}

material Practica2GLSL/space
{
    technique
    {
        pass
        {
            vertex_program_ref SpaceSkyVS
            { // params -> default_params

            }
            fragment_program_ref SpaceSkyFS
            { // params -> default_params

            }
            texture_unit // * -> int_0
            {
                texture lightMap.jpg 2d // archivo
                tex_address_mode clamp // solo configuracion
                filtering bilinear // de acceso al texel
            }
            texture_unit // * -> int_1
            {
                texture spaceSky.jpg 2d // archivo
                tex_address_mode wrap // solo configuracion
            }
        }
    }
}

vertex_program BombaTeseladaVS glsl
{
    // nombre del archivo del codigo
    source BombaTeseladaVS.glsl
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjectionMatrix worldviewproj_matrix


        param_named_auto sintime sintime_0_2pi 10
        param_named a float 0.25
        param_named b float 1.25
    }
}

fragment_program BombaTeseladaFS glsl
{
    // nombre del archivo de codigo
    source BombaTeseladaFS.glsl
    default_params // valores para las variable uniform
    {
        param_named texturaC int 0
        param_named texturaL int 1 // Primera unidad de textura
        param_named texturaM int 2 // Segunda unidad de textura
        param_named intLuzAmb float 1.0
        
    }
}

material Practica2GLSL/bombaTeselada
{
    technique
    {
        pass
        {
            vertex_program_ref BombaTeseladaVS
            { // params -> default_params

            }
            fragment_program_ref BombaTeseladaFS
            { // params -> default_params

            }
            texture_unit // * -> int_0
            {
                texture checker.png 2d // archivo
                tex_address_mode wrap // solo configuracion
                filtering bilinear // de acceso al texel
            }
            texture_unit // * -> int_1
            {
                texture spaceSky.jpg 2d // archivo
                tex_address_mode wrap // solo configuracion
            }
            texture_unit // * -> int_2
            {
                texture BumpyMetal.jpg 2d // archivo
                tex_address_mode wrap // solo configuracion
            }
        }
    }
}

vertex_program SpaceVS glsl
{
    // nombre del archivo del codigo
    source SpaceVS.glsl
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjectionMatrix worldviewproj_matrix
        param_named_auto sintime sintime_0_2pi 60
        param_named a float 0.25
        param_named b float 1.25
    }
}

fragment_program SpaceFS glsl
{
    // nombre del archivo del codigo
    source SpaceFS.glsl
    default_params // valores para las variable uniform
    {
        param_named texturaL int 0 // Primera unidad de textura
        param_named texturaM int 1 // Segunda unidad de textura
        param_named BF float 0.5
        param_named intLuzAmb float 1.0
    }
}

material Practica2GLSL/newSpace
{
    technique
    {
        pass
        {
            vertex_program_ref SpaceVS
            { // params -> default_params

            }
            fragment_program_ref SpaceFS
            { // params -> default_params

            }
            texture_unit // * -> int_0
            {
                texture lightMap.jpg 2d // archivo
                tex_address_mode clamp // solo configuracion
                filtering bilinear // de acceso al texel
            }
            texture_unit // * -> int_1
            {
                texture spaceSky.jpg 2d // archivo
                tex_address_mode mirror // solo configuracion
            }
        }
    }
}

fragment_program HolesFS glsl
{
    // nombre del archivo de codigo
    source HolesFS.glsl
    default_params // valores para las variable uniform
    {
        param_named texturaC int 0
        param_named texturaBS int 1 // Primera unidad de textura
        param_named texturaBM int 2 // Segunda unidad de textura
        param_named intLuzAmb float 1.0

        param_named_auto Flipping render_target_flipping
        
    }
}

material Practica2GLSL/Holes
{
    technique
    {
        pass
        {
            cull_hardware none

            vertex_program_ref SpaceSkyVS
            { // params -> default_params

            }
            fragment_program_ref HolesFS
            { // params -> default_params

            }
            texture_unit // * -> int_0
            {
                texture corrosion.jpg 2d // archivo
                tex_address_mode wrap // solo configuracion
                filtering bilinear // de acceso al texel
            }
            texture_unit // * -> int_1
            {
                texture BeachStones.jpg 2d // archivo
                tex_address_mode wrap // solo configuracion
            }
            texture_unit // * -> int_2
            {
                texture BumpyMetal.jpg 2d // archivo
                tex_address_mode wrap // solo configuracion
            }
        }
    }
}

vertex_program HolesAndVertexLightingVS glsl
{
    // nombre del archivo del codigo
    source HolesAndVertexLightingVS.glsl
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto modelViewMat world_matrix
        param_named_auto normalMat inverse_transpose_worldview_matrix

        param_named_auto lightDiffuse light_diffuse_colour 0
        param_named_auto lightPosition light_position 0

        param_named materialDiffuse1 float3 0.72 0.57 0.35
        param_named materialDiffuse2 float3 0.0 0.6 0.83


    }
}

fragment_program HolesAndVertexLightingFS glsl
{
    // nombre del archivo del codigo
    source HolesAndVertexLightingFS.glsl
    default_params // valores para las variable uniform
    {
        param_named texturaC int 0
        param_named texturaBS int 1 // Primera unidad de textura
        param_named texturaBM int 2 // Segunda unidad de textura

        param_named_auto Flipping render_target_flipping
        
    }
}

material Practica2GLSL/HolesAndVertexLighting
{
    technique
    {
        pass
        {
            cull_hardware none

            vertex_program_ref HolesAndVertexLightingVS
            {

            }
            fragment_program_ref HolesAndVertexLightingFS
            {

            }
            texture_unit
            {
                texture corrosion.jpg 2d
                tex_address_mode wrap
            }
            texture_unit
            {
                texture BeachStones.jpg 2d
                tex_address_mode wrap
            }
            texture_unit
            {
                texture BumpyMetal.jpg 2d
                tex_address_mode wrap
            }
        }
    }
}


vertex_program HolesAndLightingVS glsl
{
    // nombre del archivo del codigo
    source HolesAndLightingVS.glsl
    default_params // valores para las variable uniform
    {
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto modelViewMat worldview_matrix
        param_named_auto normalMat inverse_transpose_worldview_matrix


    }
}

fragment_program HolesAndLightingFS glsl
{
    // nombre del archivo del codigo
    source HolesAndLightingFS.glsl
    default_params // valores para las variable uniform
    {
        param_named texturaC int 0
        param_named texturaF int 1 // Primera unidad de textura
        param_named texturaB int 2 // Segunda unidad de textura

        param_named_auto Flipping render_target_flipping

        param_named_auto lightDiff light_diffuse_colour 0
        param_named_auto lightPos light_position_view_space 0
        param_named matFDiff float3 0.72 0.57 0.35
        param_named matBDiff float3 0.0 0.6 0.83
        
    }
}

material Practica2GLSL/HolesAndLighting
{
    technique
    {
        pass
        {
            cull_hardware none

            vertex_program_ref HolesAndLightingVS
            {

            }
            fragment_program_ref HolesAndLightingFS
            {

            }
            texture_unit
            {
                texture corrosion.jpg 2d
                tex_address_mode wrap
                filtering bilinear
            }
            texture_unit
            {
                texture BeachStones.jpg 2d
                tex_address_mode wrap
            }
            texture_unit
            {
                texture BumpyMetal.jpg 2d
                tex_address_mode wrap
            }
        }
    }
}

vertex_program SpotLightVS glsl{
    source SpotLightVS.glsl
    default_params{
        param_named_auto modelViewProjMat worldviewproj_matrix
        param_named_auto WorldMat world_matrix
        param_named_auto NormalMat inverse_transpose_world_matrix
    }
}

fragment_program SpotLightFS glsl{
    source SpotLightFS.glsl
    default_params{
        param_named_auto cutoff costime_0_2pi 30
        param_named_auto lightDiff light_diffuse_colour 1
        param_named_auto lightPos light_position 1
        param_named tex int 0 
    }
}


material Practica2GLSL/SpotLight
{
    technique
    {
        pass
        {
            lighting off
            cull_hardware none

            vertex_program_ref SpotLightVS
            {

            }
            fragment_program_ref SpotLightFS
            {

            }
            texture_unit
            {
                texture BeachStones.jpg 2d
                tex_address_mode wrap

            }
        }
    }
}

